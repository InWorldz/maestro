'''
Created on Dec 30, 2013

Daemon that reads the maestroctl database and looks for tasks to execute
it then executes tasks in a limited batch size

@author: David Daeschler
'''

import sys
import os
import logging

from optparse import OptionParser
from config import Configuration
from TaskManagerServer import TaskManagerServer
from inworldz.maestro.environment.ComputeResource import ComputeResource
from inworldz.maestro.environment import CredentialCrypt

__all__ = []
__version__ = 0.1
__date__ = '2014-1-1'
__updated__ = '2014-1-1'

def main(argv=None):
    '''Command line options.'''
    program_name = os.path.basename(sys.argv[0])
    program_version = "v0.8"
    program_build_date = "%s" % __updated__

    program_version_string = '%%prog %s (%s)' % (program_version, program_build_date)
    #program_usage = '''usage: spam two eggs''' # optional - will be autogenerated by optparse
    program_longdesc = '''''' # optional - give further explanation about what the program does
    program_license = "Copyright 2014 InWorldz LLC, This is unreleased source code of InWorldz, All Rights Reserved."

    if argv is None:
        argv = sys.argv[1:]

    # setup option parser
    parser = OptionParser(version=program_version_string, epilog=program_longdesc, description=program_license)

    parser.add_option("-c", "--config", dest="configPath", help="where the deamon should look for the config file [default: %default]")
    parser.add_option("-a", "--setauth", action="store_true", default=False, dest="setAuth", help="don't start the deamon, but instead set authorization information for the given resource")


    # set defaults
    if sys.platform == 'win32':
        confName=os.path.realpath("taskmanager.conf")
    else:
        confName="/etc/maestro/taskmanager.conf"
    parser.set_defaults(configPath=confName)

    # process options
    (opts, args) = parser.parse_args(argv)

    cfg = Configuration.instance()
    cfg.loadFromFile(opts.configPath)

    CredentialCrypt.SECRET = cfg.getValue("credential_crypt_secret")
    CredentialCrypt.IV = cfg.getValue("credential_crypt_iv")

    print "Loaded "+opts.configPath

    if opts.setAuth:
        #print args
        ComputeResource.setAuth(cfg.getEnvironmentDbConfig(), args[0], args[1], args[2])
    else:
        server = TaskManagerServer(cfg)
        server.run()

if __name__ == '__main__':
    sys.exit(main())
